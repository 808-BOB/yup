"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/event-list/page",{

/***/ "(app-pages-browser)/../../packages/utils/auth-context.tsx":
/*!*********************************************!*\
  !*** ../../packages/utils/auth-context.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@14.1.0_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@14.1.0_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/../../packages/utils/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Fetch user profile data including premium status\n    const fetchUserProfile = async (userId)=>{\n        const { data: profile, error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"users\").select(\"*\").eq(\"id\", userId).single();\n        if (error) {\n            console.error(\"Error fetching user profile:\", error);\n            return null;\n        }\n        return profile;\n    };\n    // Hydrate from local session on first load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const init = async ()=>{\n            var _data_session;\n            const { data } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession();\n            if ((_data_session = data.session) === null || _data_session === void 0 ? void 0 : _data_session.user) {\n                const profile = await fetchUserProfile(data.session.user.id);\n                setUser({\n                    ...data.session.user,\n                    ...profile\n                });\n            } else {\n                setUser(null);\n            }\n            setIsLoading(false);\n        };\n        init();\n        // Subscribe to auth changes\n        const { data: listener } = _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.onAuthStateChange(async (_event, session)=>{\n            if (session === null || session === void 0 ? void 0 : session.user) {\n                const profile = await fetchUserProfile(session.user.id);\n                setUser({\n                    ...session.user,\n                    ...profile\n                });\n            } else {\n                setUser(null);\n            }\n        });\n        return ()=>listener === null || listener === void 0 ? void 0 : listener.subscription.unsubscribe();\n    }, []);\n    const login = async (email, password)=>{\n        setIsLoading(true);\n        try {\n            const { error: signInErr, data } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            if (signInErr) throw signInErr;\n            const profile = await fetchUserProfile(data.user.id);\n            setUser({\n                ...data.user,\n                ...profile\n            });\n            // Redirect to my-events after successful login\n            if (true) {\n                window.location.href = \"/my-events\";\n            }\n        } catch (err) {\n            setError(err.message || \"Login failed\");\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const logout = async ()=>{\n        await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signOut();\n        setUser(null);\n    };\n    const signup = async (username, displayName, password)=>{\n        setIsLoading(true);\n        try {\n            // For demo we use username as email if it contains @ else append placeholder domain\n            const email = username.includes(\"@\") ? username : \"\".concat(username, \"@example.com\");\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        username,\n                        display_name: displayName\n                    }\n                }\n            });\n            if (error) throw error;\n            // Insert profile row (RLS will allow)\n            const { data: profile, error: profileError } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"users\").insert({\n                id: data.user.id,\n                username,\n                display_name: displayName,\n                email,\n                is_premium: false,\n                is_admin: false\n            }).select().single();\n            if (profileError) throw profileError;\n            setUser({\n                ...data.user,\n                ...profile\n            });\n            // Redirect to my-events after successful signup\n            if (true) {\n                window.location.href = \"/my-events\";\n            }\n        } catch (err) {\n            setError(err.message || \"Signup failed\");\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const loginWithGoogle = async ()=>{\n        setIsLoading(true);\n        try {\n            const origin =  true ? window.location.origin : 0;\n            const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithOAuth({\n                provider: \"google\",\n                options: {\n                    redirectTo: \"\".concat(origin, \"/auth/callback\")\n                }\n            });\n            if (error) throw error;\n        } catch (err) {\n            setError(err.message || \"Google sign-in failed\");\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const value = {\n        user,\n        isLoading,\n        error,\n        login,\n        signup,\n        loginWithGoogle,\n        logout\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\BOB\\\\yup\\\\starter-app\\\\packages\\\\utils\\\\auth-context.tsx\",\n        lineNumber: 163,\n        columnNumber: 10\n    }, this);\n}\n_s(AuthProvider, \"caAZa649wyY9nHJT6au393y4yCs=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!ctx) throw new Error(\"useAuth must be used inside <AuthProvider>\");\n    return ctx;\n}\n_s1(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../packages/utils/auth-context.tsx\n"));

/***/ })

});